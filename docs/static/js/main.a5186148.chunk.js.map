{"version":3,"sources":["components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Business","react_default","a","createElement","className","href","this","props","business","url","target","rel","src","imageSrc","alt","name","concat","latitude","longitude","address","city","state","zipCode","category","toUpperCase","rating","reviewCount","React","Component","BusinessList","businesses","map","components_Business_Business","key","id","SearchBar","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","term","location","sortBy","handleTermChange","bind","assertThisInitialized","handleLocationChange","handleSearch","handleSortByChange","reHandleSearch","handleKeyPress","sortByOptions","Best Match","Highest Rated","Most Reviewed","sortByOption","sortByOptionValue","setState","event","value","searchYelp","preventDefault","charCode","e","select","console","log","_this2","keys","getSortByClass","onClick","renderSortByOptions","placeholder","onChange","onFocus","handleFocus","onKeyPress","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","coordinates","App","components_SearchBar_SearchBar","components_BusinessList_BusinessList","Boolean","window","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a5186148.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Business.css';\r\n\r\nclass Business extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Business\">\r\n        <div className=\"image-container\">\r\n          <a href={this.props.business.url} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n            <img src={this.props.business.imageSrc} alt=''/>\r\n          </a>\r\n        </div>\r\n        <h2>{this.props.business.name}</h2>\r\n        <div className=\"Business-information\">\r\n            <div className=\"Business-address\" rel=\"noopener noreferrer\" >\r\n              <a href={`https://www.google.com/maps/search/?api=1&query=${this.props.business.latitude},${this.props.business.longitude}`} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                <p>{this.props.business.address}</p>\r\n                <p>{this.props.business.city}</p>\r\n                <p>{`${this.props.business.state} ${this.props.business.zipCode}`}</p>\r\n              </a>\r\n            </div>\r\n          <div className=\"Business-reviews\">\r\n            <h3>{this.props.business.category.toUpperCase()}</h3>\r\n            <h3 className=\"rating\">{`${this.props.business.rating} stars`}</h3>\r\n            <p>{`${this.props.business.reviewCount} reviews`}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Business;\r\n","import React from 'react';\r\nimport './BusinessList.css';\r\nimport Business from '../Business/Business';\r\n\r\nclass BusinessList extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"BusinessList\">\r\n        {\r\n          this.props.businesses.map(business =>\r\n            <Business business={business} key={business.id} />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BusinessList;\r\n","import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      term: '',\n      location: '',\n      sortBy: 'best_match'\n    };\n\n    this.handleTermChange = this.handleTermChange.bind(this);\n    this.handleLocationChange = this.handleLocationChange.bind(this);\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleSortByChange = this.handleSortByChange.bind(this);\n    this.reHandleSearch = this.reHandleSearch.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n\n    this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n    };\n  }\n\n  getSortByClass(sortByOption) {\n    return this.state.sortBy === sortByOption ? 'active' : '';\n  }\n\n  handleSortByChange(sortByOptionValue) {\n    this.setState({sortBy: sortByOptionValue});\n\n  }\n\n  handleTermChange(event) {\n    this.setState({term: event.target.value});\n  }\n\n  handleLocationChange(event) {\n    this.setState({location: event.target.value});\n\n  }\n\n  handleSearch(event) {\n    this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n\n    event.preventDefault();\n  }\n\n  handleKeyPress(event) {\n    const eventKey = event.charCode;\n    if (eventKey === 13) {\n      this.handleSearch(event);\n    }\n  }\n\n  handleFocus(e) {\n    e.preventDefault();\n    e.target.select();\n  }\n\n  reHandleSearch(sortByOptionValue) {\n    this.handleSortByChange(sortByOptionValue);\n    console.log(`This is the new sortByOptionValue: ${sortByOptionValue}`);\n    if (this.props.businesses[0]) {\n      this.props.searchYelp(this.state.term, this.state.location, sortByOptionValue);\n    }\n  }\n\n  renderSortByOptions() {\n    return Object.keys(this.sortByOptions).map(sortByOption => {\n      let sortByOptionValue = this.sortByOptions[sortByOption];\n      return (<li className={this.getSortByClass(sortByOptionValue)}\n                  key={sortByOptionValue}\n                  onClick={this.reHandleSearch.bind(this, sortByOptionValue)} >\n                {sortByOption}\n             </li>);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBar-sort-options\">\n          <ul>\n            {this.renderSortByOptions()}\n          </ul>\n        </div>\n        <div className=\"SearchBar-fields\">\n          <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} onFocus={this.handleFocus} onKeyPress={this.handleKeyPress} />\n          <input placeholder=\"Where?\" onFocus={this.handleFocus} onChange={this.handleLocationChange}\n          onKeyPress={this.handleKeyPress} />\n        </div>\n        <div className=\"SearchBar-submit\">\n          <button onClick={this.handleSearch}>Let's Go</button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","const apiKey = 'UKyfSJbt7p23DB2koF56uMEKpmLshwjnmjJHAGxk_WxXgbl86r_z2xMvQ9t36GBKpNUIB6MDZQVibIkRhloYgBDvnvfm1_TsOMiiA9kq_5aU0jCeOh3wRl3oKnCcWnYx';\r\n\r\nconst Yelp = {\r\n  search(term, location, sortBy) {\r\n    // console.log(`Search arguments: ${term}, ${location}, ${sortBy}`);\r\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\r\n      headers: {\r\n        Authorization: `Bearer ${apiKey}`\r\n      }\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(jsonResponse => {\r\n      if (jsonResponse.businesses) {\r\n          return jsonResponse.businesses.map(business => ({\r\n              id: business.id,\r\n              imageSrc: business.image_url,\r\n              name: business.name,\r\n              address: business.location.address1,\r\n              city: business.location.city,\r\n              state: business.location.state,\r\n              zipCode: business.location.zip_code,\r\n              category: business.categories[0].title,\r\n              rating: business.rating,\r\n              reviewCount: business.review_count,\r\n              latitude: business.coordinates.latitude,\r\n              longitude: business.coordinates.longitude,\r\n              url: business.url\r\n          })\r\n        );\r\n      }\r\n    })\r\n  }\r\n};\r\n\r\nexport default Yelp;\r\n","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList';\nimport SearchBar from '../SearchBar/SearchBar';\nimport Yelp from '../../util/Yelp';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      businesses: []\n    };\n\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n\n  searchYelp(term, location, sortBy) {\n    Yelp.search(term, location, sortBy).then(businesses => (\n      this.setState({businesses: businesses})\n    ));\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Ravenous</h1>\n        <SearchBar searchYelp={this.searchYelp} businesses={this.state.businesses} />\n        <BusinessList businesses={this.state.businesses} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}